name: CI
on:
  pull_request:
  push:
    branches:
      - main
      - dev
    tags:
      - '*'
  workflow_dispatch:
jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 15.x, 16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org/'
          cache: 'yarn'
      - name: Install dependencies
        run: |
          yarn
  build-android-apk:
    name: Build Android APK
    if: startsWith(github.ref, 'refs/tags/')
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.0.0'
      - name: Restore yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          yarn
      - name: Build android apk
        run: |
          cd android && ./gradlew assembleRelease
      - name: Get the version
        id: get_version
        run: |
          echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
          echo ::set-output name=PACKAGE_VERSION_NAME::$(node -p "require('./package.json').version")
      - name: Set apk name
        id: set_apk_name
        run: |
          echo ::set-output name=COMMIT_ID::$(echo $GITHUB_SHA | cut -c 1-7)
          echo ::set-output name=APK_NAME::$(echo "v2hub-${{ steps.get_version.outputs.PACKAGE_VERSION_NAME }}-${{ steps.set_apk_name.outputs.COMMIT_ID }}.apk")
      - name: Move release apk to target directory
        run: cp android/app/build/outputs/apk/release/app-release.apk android/app/build/outputs/apk/release/${{ steps.set_apk_name.outputs.APK_NAME }}
      - name: Build changelog
        id: build_changelog
        if: startsWith(github.ref, 'refs/tags/')
        uses: mikepenz/release-changelog-builder-action@v2.9.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: '.config/changelog_configuration.json'
          ignorePreReleases: 'false'
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{steps.build_changelog.outputs.changelog}}
          files: |
            android/app/build/outputs/apk/release/${{ steps.set_apk_name.outputs.APK_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

  push-release-message:
    name: Push release message
    runs-on: ubuntu-latest
    needs: [build-android-apk]
    steps:
      - name: Push message
        uses: funnyzak/pushoo-action@main
        with:
          platforms: ifttt,wecombot,bark
          tokens: ${{ secrets.PUSH_TOKEN }}
          content: |
            # ${{ github.event.repository.name }} Released
            ## trigger: ${{ github.event_name }} at ${{ github.event.head_commit.timestamp }}
            ## commit message: ${{ github.event.head_commit.message }}
            ## commit url: ${{ github.event.head_commit.url }}
            ## commit author: ${{ github.event.head_commit.author.name }}
            ## commit email: ${{ github.event.head_commit.author.email }}
            ## commit id: ${{ github.event.head_commit.id }}
          title: |
            ${{ github.repository }} ${{ github.event_name }} Message
          options: '{"bark": { "url": "https://github.com/${{github.repository}}" }}'
          debug: false
